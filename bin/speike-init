#!/usr/bin/env node

const program = require('commander')
const chalk = require('chalk')
const inquirer = require('inquirer')
const path = require('path')
const utils = require('../lib/utils.js')
const SpeikeInit = require('../lib/init.js')

/**
 * Usage.
 */

program
  .usage('<template-name> [project-name]')
  .option('-c, --clone', 'use git clone')
  .parse(process.argv)

/**
 * Help.
 */

program.on('--help', function () {
  console.log('  Examples:')
  console.log()
  console.log(chalk.gray('    # create a new project with an official template'))
  console.log('    $ speike init template my-project')
  console.log()
  console.log(chalk.gray('    # create a new project straight from a github template'))
  console.log('    $ speike init username/repo my-project')
  console.log()
})

if (program.args.length < 1) return program.help()

/**
 * Start.
 */

const template = program.args[0]
const rawName = program.args[1]
const isHere = !rawName || rawName === '.'
const name = isHere ? path.relative('../', process.cwd()) : rawName
const targetPath = path.join(process.cwd(), rawName || '.')
const clone = program.clone || false
const init = new SpeikeInit({template, name, targetPath, clone})

if (utils.isExist(targetPath)) {
  inquirer.prompt([{
    type: 'confirm',
    message: isHere
      ? 'Generate project in current directory?'
      : 'Target directory exists. Continue?',
    name: 'ok'
  }]).then(function (answers) {
    if (answers.ok) {
      init.run()
    }
  })
} else {
  init.run()
}
